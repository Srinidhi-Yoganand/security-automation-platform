version: '3.8'

# Docker Hub Version - No Local Build Required
# This docker-compose uses pre-built images from Docker Hub
# Users can deploy without source code!

services:
  # Ollama LLM Service (DeepSeek Coder)
  ollama:
    image: ollama/ollama:latest
    container_name: security-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 12G
        reservations:
          memory: 8G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Correlation Engine API (FROM DOCKER HUB)
  # Change 'srinivas' to your Docker Hub username after pushing
  correlation-engine:
    image: srinidhiyoganand/security-automation:latest
    container_name: security-correlation
    environment:
      # LLM Configuration
      - OLLAMA_HOST=http://ollama:11434
      - LLM_PROVIDER=ollama
      - OLLAMA_MODEL=deepseek-coder:6.7b-instruct
      
      # Database
      - DATABASE_URL=sqlite:///./security.db
      
      # Optional: Notification Configuration (use .env file)
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SMTP_FROM=${SMTP_FROM:-}
      - NOTIFICATION_EMAIL=${NOTIFICATION_EMAIL:-}
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - GITHUB_REPO=${GITHUB_REPO:-}
    
    depends_on:
      ollama:
        condition: service_healthy
    
    ports:
      - "8000:8000"
    
    volumes:
      # Mount your Java app for scanning (optional)
      # - ./your-java-app:/app/target:ro
      
      # Data persistence
      - correlation_data:/app/data
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    command: >
      sh -c "
        echo 'üöÄ Starting Security Automation Platform...' &&
        echo '‚è≥ Waiting for Ollama service...' &&
        sleep 10 &&
        echo 'üì• Pulling DeepSeek Coder model (first time only)...' &&
        python -c 'import ollama; ollama.pull(\"deepseek-coder:6.7b-instruct\")' || true &&
        echo '‚úÖ Starting API server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000
      "

volumes:
  ollama_data:
    name: security-ollama-models
    driver: local
  
  correlation_data:
    name: security-correlation-data
    driver: local

networks:
  default:
    name: security-automation-network
    driver: bridge

# For production: uncomment and configure secrets
# secrets:
#   slack_webhook:
#     file: ./secrets/slack_webhook.txt
#   github_token:
#     file: ./secrets/github_token.txt
