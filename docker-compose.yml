version: '3.8'

# ==============================================================================
# SECURITY AUTOMATION PLATFORM - Production Deployment
# ==============================================================================
# Pre-built Docker images from Docker Hub - no source code needed!
#
# Quick Start:
#   1. docker-compose up -d
#   2. Access dashboard: http://localhost:8000/api/v1/e2e/dashboard
#   3. API docs: http://localhost:8000/docs
#
# Scan your app:
#   curl -X POST http://localhost:8000/api/v1/e2e/analyze-and-fix-with-pr \
#     -H "Content-Type: application/json" \
#     -d '{"source_path": "/path/to/your/app", "language": "java"}'
# ==============================================================================

services:
  # Ollama LLM Service - AI-powered patch generation
  ollama:
    image: ollama/ollama:latest
    container_name: security-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 12G
        reservations:
          memory: 8G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Security Automation Platform - Main Service
  correlation-engine:
    image: srinidhiyoganand/security-automation-platform:latest
    container_name: security-correlation-engine
    environment:
      # LLM Configuration
      - OLLAMA_HOST=http://ollama:11434
      - LLM_PROVIDER=${LLM_PROVIDER:-ollama}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-deepseek-coder:6.7b-instruct}
      
      # Alternative LLM Providers (optional)
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      
      # Database
      - DATABASE_URL=sqlite:///./data/security.db
      
      # GitHub Integration (for PR creation)
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - GITHUB_REPO=${GITHUB_REPO:-}
      
      # Notifications (optional)
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - SMTP_SERVER=${SMTP_SERVER:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SMTP_FROM=${SMTP_FROM:-}
      - NOTIFICATION_EMAIL=${NOTIFICATION_EMAIL:-}
    
    depends_on:
      ollama:
        condition: service_healthy
    
    ports:
      - "8000:8000"
    
    volumes:
      # Mount YOUR application for scanning
      - ${TARGET_APP_PATH:-.}:/target-app:ro
      
      # Data persistence (databases, scan results, patches)
      - correlation_data:/app/data
      
      # CodeQL databases cache
      - codeql_data:/app/codeql-databases
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    networks:
      - security-network

volumes:
  ollama_data:
    name: security-ollama-models
    driver: local
  
  correlation_data:
    name: security-correlation-data
    driver: local
  
  codeql_data:
    name: security-codeql-cache
    driver: local

networks:
  security-network:
    name: security-automation-network
    driver: bridge
